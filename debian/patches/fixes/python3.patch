description: launch scripts that use removed python2 modules with python3
author: Michael Gilbert <mgilbert@debian.org>

--- a/tools/gn/src/gn/ninja_action_target_writer.cc
+++ b/tools/gn/src/gn/ninja_action_target_writer.cc
@@ -136,7 +136,13 @@ std::string NinjaActionTargetWriter::Wri
   }
 
   out_ << "  command = ";
+  std::string script_name = target_->action_values().script().GetName();
+  if (script_name == "gen_xproto.py") {
+  out_ << "python3";
+  } else {
   path_output_.WriteFile(out_, settings_->build_settings()->python_path());
+  }
+
   out_ << " ";
   path_output_.WriteFile(out_, target_->action_values().script());
   for (const auto& arg : args.list()) {
--- a/ui/gfx/x/gen_xproto.py
+++ b/ui/gfx/x/gen_xproto.py
@@ -166,6 +166,7 @@
 
 from __future__ import print_function
 
+import functools
 import argparse
 import collections
 import os
@@ -919,11 +920,13 @@ class GenXproto:
                 return 3
             return 2
 
-        def cmp((_1, item1), (_2, item2)):
+        def compare(tuple1, tuple2):
+            (_1, item1) = tuple1
+            (_2, item2) = tuple2
             return type_order_priority(item1) - type_order_priority(item2)
 
         # sort() is guaranteed to be stable.
-        self.module.all.sort(cmp=cmp)
+        self.module.all.sort(key=functools.cmp_to_key(compare))
 
     def gen_header(self):
         self.file = self.args.headerfile
